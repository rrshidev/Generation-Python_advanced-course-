"""
–ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–º–µ–π–∫–æ–π

–ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞—é—Ç—Å—è –¥–≤–∞ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã—Ö —á–∏—Å–ª–∞ n –∏ m. –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è —Å–æ–∑–¥–∞–µ—Ç –º–∞—Ç—Ä–∏—Ü—É —Ä–∞–∑–º–µ—Ä–æ–º n√óm,
–∑–∞–ø–æ–ª–Ω–∏–≤ –µ—ë "–∑–º–µ–π–∫–æ–π" –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –æ–±—Ä–∞–∑—Ü–æ–º.

–§–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
–ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –Ω–∞ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–µ –ø–æ–¥–∞—é—Ç—Å—è –¥–≤–∞ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã—Ö —á–∏—Å–ª–∞ nnn –∏ mmm ‚Äî –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫ –∏ —Å—Ç–æ–ª–±—Ü–æ–≤ –≤ –º–∞—Ç—Ä–∏—Ü–µ.

–§–æ—Ä–º–∞—Ç –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
–ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ —É–∫–∞–∑–∞–Ω–Ω—É—é –º–∞—Ç—Ä–∏—Ü—É –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –æ–±—Ä–∞–∑—Ü–æ–º.

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ. –î–ª—è –≤—ã–≤–æ–¥–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–∞—Ç—Ä–∏—Ü—ã –∫–∞–∫ –≤ –ø—Ä–∏–º–µ—Ä–∞—Ö, –æ—Ç–≤–æ–¥–∏—Ç–µ —Ä–æ–≤–Ω–æ 333 —Å–∏–º–≤–æ–ª–∞ –Ω–∞ –∫–∞–∂–¥—ã–π —ç–ª–µ–º–µ–Ω—Ç.
–î–ª—è —ç—Ç–æ–≥–æ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å—Ç—Ä–æ–∫–æ–≤—ã–π –º–µ—Ç–æ–¥ ljust(). –ú–æ–∂–Ω–æ –æ–±–æ–π—Ç–∏—Å—å –∏ –±–µ–∑ ljust(), —Å–∏—Å—Ç–µ–º–∞ –ø—Ä–∏–º–µ—Ç –∏ —Ç–∞–∫–æ–µ —Ä–µ—à–µ–Ω–∏–µ üòá
–¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ üü¢

Sample Input 1:

3 5

Sample Output 1:

1  2  3  4  5
10 9  8  7  6
11 12 13 14 15
"""


def fill_matrix(n_size, m_size, source_nums):
    matrix = []
    for r in range(n_size):
        row_nums = []
        for c in range(m_size):
            if r % 2 == 0:
                row_nums.append(str(source_nums[c]))
            else:
                row_nums.insert(0, str(source_nums[c]))
        source_nums = source_nums[c + 1 : ]
        matrix.append(row_nums)
    return matrix


def main():
    in_nums = [int(num) for num in input().split()]
    n, m = in_nums[0], in_nums[1]
    matrix_nums = [int(num) for num in range(1, n * m + 1)]
    matrix = fill_matrix(n, m, matrix_nums)
    for row in range(n):
        for col in range(m):
            print(*matrix[row][col].ljust(3), end='')
        print()


main()
